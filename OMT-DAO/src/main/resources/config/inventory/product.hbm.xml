<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
 "-//Hibernate/Hibernate Mapping DTD//EN"
 "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"> 

<hibernate-mapping>
   <class name="com.litetech.omt.dao.model.inventory.Product" table="PRODUCT">
      
      <id name="id" type="long" column="product_id">
         <generator class = "sequence">
			<param name="sequence">PRODUCT_SEQ</param>
		 </generator>
      </id>
      <property name="productName" column="PRODUCT_NAME" type="string"/>
      <property name="productDesc" column="PRODUCT_DESC" type="string"/>
      <property name="productCode" column="PRODUCT_CODE" type="string"/>
      <property name="status" column="PRODUCT_STATUS" type="int"/>
      <property name="quantityAvl" column="QUANTITY_AVL" type="double"/>        
      <!--  <property name="measurableUnitId" column="MEASURABLE_UNIT_ID" type="int"/>  -->
      <property name="creationDate" column="CREATION_DATE" type="date"/>
      <property name="lastModifiedDate" column="LAST_MODIFIED_DATE" type="date"/>
               
      <many-to-one name="measurableUnit" column="MEASURABLE_UNIT_ID" unique="true" 
         class="com.litetech.omt.dao.model.inventory.Unit" not-null="true" fetch="select"/>
         
      <set name="productPriceSet" table="PRODUCT_PRICE" inverse="true" lazy="true" fetch="select">
        <key>
            <column name="product_id" />
        </key>
        <one-to-many class="com.litetech.omt.dao.model.inventory.ProductPrice" />
        </set>
        
       <set name="productUnitSet" table="PRODUCT_UNIT" inverse="true" lazy="true" fetch="select">
        <key>
            <column name="product_id" />
        </key>
        <one-to-many class="com.litetech.omt.dao.model.inventory.ProductUnit" />
       </set>
   </class>
   <query name="fetchAllProducts">
        <![CDATA[from Product product where product.status = :status]]>
    </query>
  	
  	 <query name="fetchProductByIds">
        <![CDATA[from Product product where product.id IN (:ids)]]>
    </query>
    
    <query name="findProductIdsByName">
        <![CDATA[select product.id from Product product where product.productName = :productName]]>
    </query>  
</hibernate-mapping>